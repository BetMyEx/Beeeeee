{"version":3,"sources":["components/Header/Componets/MenuItem/index.js","components/Header/index.js","components/BannerHeader/Components/BannerButtons/index.js","components/BannerHeader/index.js","components/LineArticle/Components/FirstArticle/index.js","components/LineArticle/index.js","App.js","serviceWorker.js","index.js"],"names":["MenuItem","className","React","Component","Header","BannerButtons","BannerHeader","FirstArticle","LineArticle","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6XAaeA,G,6LATP,OAAO,yBAAKC,UAAU,YAClB,wBAAIA,UAAU,kBACd,wBAAIA,UAAU,kBACd,wBAAIA,UAAU,kBACd,wBAAIA,UAAU,uB,GANHC,IAAMC,YCWdC,E,iLAPP,OAAO,yBAAKH,UAAU,UAClB,yBAAKA,UAAU,SACf,6BAAK,kBAAC,EAAD,Y,GAJIC,IAAMC,WCOZE,G,6LAPP,OAAO,yBAAKJ,UAAU,iBAClB,4BAAQA,UAAU,eAAlB,gBACA,4BAAQA,UAAU,eAAlB,qB,GAJgBC,IAAMC,YCanBG,E,iLAVP,OAAO,yBAAKL,UAAU,gBAClB,yBAAKA,UAAU,kBACf,uBAAGA,UAAU,YAAb,iBACA,uBAAGA,UAAU,YAAb,+BAEA,6BAAK,kBAAC,EAAD,OALF,S,GAFYC,IAAMC,WCWlBI,G,6LATP,OAAO,yBAAKN,UAAU,gBAClB,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,sBAAf,kBACA,yBAAKA,UAAU,uBAAf,kLACA,uBAAGA,UAAU,oBAAb,kB,GANeC,IAAMC,YCSlBK,E,iLAPP,OAAO,yBAAKP,UAAU,eAClB,6BAAK,kBAAC,EAAD,OACL,6BAAK,kBAAC,EAAD,OACL,6BAAK,kBAAC,EAAD,Y,GALSC,IAAMC,WCajBM,MAVf,WACI,OACI,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.194c05cb.chunk.js","sourcesContent":["import React from \"react\";\nimport './style.css'\nclass MenuItem extends React.Component {\n    render() {\n        return <nav className=\"menuItem\">\n            <li className=\"menuItemBlock\"></li>\n            <li className=\"menuItemBlock\"></li>\n            <li className=\"menuItemBlock\"></li>\n            <li className=\"menuItemBlock\"></li>\n        </nav>;\n    }\n\n}\nexport default MenuItem;","import React from \"react\";\nimport './style.css'\nimport MenuItem from \"./Componets/MenuItem\";\n\nclass Header extends React.Component {\n    render() {\n        return <div className=\"header\">\n            <div className=\"logo\"></div>\n            <div><MenuItem></MenuItem></div>\n        </div>;\n    }\n}\n\nexport default Header","import React from \"react\";\nimport './style.css';\nclass BannerButtons extends React.Component {\n    render() {\n        return <div className=\"bannerButtons\">\n            <button className=\"whiteButton\">white button</button>\n            <button className=\"blackButton\">black button</button>\n        </div>;\n    }\n}\n\nexport default BannerButtons;","import React from \"react\";\nimport \"./style.css\";\nimport BannerButtons from \"./Components/BannerButtons\";\nclass BannerHeader extends React.Component {\n    render() {\n        return <div className=\"bannerHeader\">\n            <div className=\"contentWrapper\">\n            <p className=\"bannerH1\">Banner Header</p>\n            <p className=\"bannerH2\">Lorem ipsum dolor sit amet</p>\n            </div>\n            <div><BannerButtons></BannerButtons></div>;\n        </div>;\n\n    }\n}\nexport default BannerHeader;\n\n\n","import React from \"react\";\nimport './style.css';\n\nclass FirstArticle extends React.Component{\n    render() {\n        return <div className=\"firstArticle\">\n            <div className=\"firstArticlePicture\"></div>\n            <div className='firstArticleHeader'>Article Header</div>\n            <div className='firstArticleContent'>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation</div>\n            <a className='firstArticleMore'>Read more</a>\n        </div>;\n    }\n\n}\nexport default FirstArticle;","import React from \"react\";\nimport \"./style.css\";\nimport FirstArticle from './Components/FirstArticle';\nclass LineArticle extends React.Component {\n    render() {\n        return <div className=\"lineArticle\">\n            <div><FirstArticle></FirstArticle></div>\n            <div><FirstArticle></FirstArticle></div>\n            <div><FirstArticle></FirstArticle></div>\n        </div>\n    }\n}\nexport default LineArticle;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport BannerHeader from \"./components/BannerHeader\";\nimport LineArticle from \"./components/LineArticle\";\n\nfunction App() {\n    return (\n        <div>\n          <Header/>\n          <BannerHeader/>\n          <LineArticle/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}